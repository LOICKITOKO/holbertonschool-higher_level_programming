How to Use 3-say_my_name.py
===========================

This module defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Deborah", "Philip")
    My name is Deborah Philip

::

    >>> say_my_name("Samuel Williams", "Msugh")
    My name is Samuel Williams Msugh

The parameter ```last_name``` is optional. an empty string is printed 
if no last name is provided

::

    >>> say_my_name("Deborah")
    My name is Deborah

Invalid Names
=============
<<<<<<< HEAD

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(6, "Williams")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("LeBron", ["Kelvin", "Leahy", "Heat"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"HeBron": 6, "Williams": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
=======
>>>>>>> ccb1e7d633d6fd472e2effd67893e19ad6446e4b
